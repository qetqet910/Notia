name: Tauri Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        name: Tauri Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm install

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          
          cd /tmp
          wget https://download.gnome.org/sources/glib/2.72/glib-2.72.0.tar.xz
          tar -xf glib-2.72.0.tar.xz
          cd glib-2.72.0
          meson _build
          ninja -C _build
          sudo ninja -C _build install
          sudo ldconfig

      - name: Build the app
        run: |
          if [ "${{ matrix.platform }}" == "ubuntu-22.04" ]; then
            export PKG_CONFIG_PATH=/usr/local/lib/x86_64-linux-gnu/pkgconfig
          fi
          npm run tauri build -- --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-${{ matrix.platform }}
          path: src-tauri/target/release/bundle/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "App ${{ github.ref_name }}"
          releaseBody: "See the assets to download this version."
          releaseDraft: true
          prerelease: false
          files: |
            artifacts/tauri-build-macos-latest/
            artifacts/tauri-build-ubuntu-22.04/
            artifacts/tauri-build-windows-latest/

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          
          cd /tmp
          wget https://download.gnome.org/sources/glib/2.72/glib-2.72.0.tar.xz
          tar -xf glib-2.72.0.tar.xz
          cd glib-2.72.0
          meson _build
          ninja -C _build
          sudo ninja -C _build install
          sudo ldconfig
          echo "PKG_CONFIG_PATH=/usr/local/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: '--verbose'
          tagName: ${{ github.ref_name }}
          releaseName: "App ${{ github.ref_name }}"
          releaseBody: "See the assets to download this version."
          releaseDraft: true
          prerelease: false
